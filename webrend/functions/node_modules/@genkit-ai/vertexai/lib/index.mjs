import {
  __async
} from "./chunk-MLCSNVBT.mjs";
import { genkitPlugin } from "genkit/plugin";
import { getDerivedParams } from "./common/index.js";
import {
  SUPPORTED_EMBEDDER_MODELS,
  defineVertexAIEmbedder,
  textEmbedding004,
  textEmbeddingGecko003,
  textEmbeddingGeckoMultilingual001,
  textMultilingualEmbedding002
} from "./embedder.js";
import {
  SUPPORTED_GEMINI_MODELS,
  defineGeminiModel,
  gemini10Pro,
  gemini15Flash,
  gemini15Pro
} from "./gemini.js";
import {
  SUPPORTED_IMAGEN_MODELS,
  imagen2,
  imagen3,
  imagen3Fast,
  imagenModel
} from "./imagen.js";
function vertexAI(options) {
  return genkitPlugin("vertexai", (ai) => __async(this, null, function* () {
    const { projectId, location, vertexClientFactory, authClient } = yield getDerivedParams(options);
    Object.keys(SUPPORTED_IMAGEN_MODELS).map(
      (name) => imagenModel(ai, name, authClient, { projectId, location })
    );
    Object.keys(SUPPORTED_GEMINI_MODELS).map(
      (name) => defineGeminiModel(ai, name, vertexClientFactory, { projectId, location })
    );
    Object.keys(SUPPORTED_EMBEDDER_MODELS).map(
      (name) => defineVertexAIEmbedder(ai, name, authClient, { projectId, location })
    );
  }));
}
var src_default = vertexAI;
export {
  src_default as default,
  gemini10Pro,
  gemini15Flash,
  gemini15Pro,
  imagen2,
  imagen3,
  imagen3Fast,
  textEmbedding004,
  textEmbeddingGecko003,
  textEmbeddingGeckoMultilingual001,
  textMultilingualEmbedding002,
  vertexAI
};
//# sourceMappingURL=index.mjs.map