"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};
var src_exports = {};
__export(src_exports, {
  default: () => src_default,
  gemini10Pro: () => import_gemini.gemini10Pro,
  gemini15Flash: () => import_gemini.gemini15Flash,
  gemini15Pro: () => import_gemini.gemini15Pro,
  imagen2: () => import_imagen.imagen2,
  imagen3: () => import_imagen.imagen3,
  imagen3Fast: () => import_imagen.imagen3Fast,
  textEmbedding004: () => import_embedder.textEmbedding004,
  textEmbeddingGecko003: () => import_embedder.textEmbeddingGecko003,
  textEmbeddingGeckoMultilingual001: () => import_embedder.textEmbeddingGeckoMultilingual001,
  textMultilingualEmbedding002: () => import_embedder.textMultilingualEmbedding002,
  vertexAI: () => vertexAI
});
module.exports = __toCommonJS(src_exports);
var import_plugin = require("genkit/plugin");
var import_common = require("./common/index.js");
var import_embedder = require("./embedder.js");
var import_gemini = require("./gemini.js");
var import_imagen = require("./imagen.js");
function vertexAI(options) {
  return (0, import_plugin.genkitPlugin)("vertexai", (ai) => __async(this, null, function* () {
    const { projectId, location, vertexClientFactory, authClient } = yield (0, import_common.getDerivedParams)(options);
    Object.keys(import_imagen.SUPPORTED_IMAGEN_MODELS).map(
      (name) => (0, import_imagen.imagenModel)(ai, name, authClient, { projectId, location })
    );
    Object.keys(import_gemini.SUPPORTED_GEMINI_MODELS).map(
      (name) => (0, import_gemini.defineGeminiModel)(ai, name, vertexClientFactory, { projectId, location })
    );
    Object.keys(import_embedder.SUPPORTED_EMBEDDER_MODELS).map(
      (name) => (0, import_embedder.defineVertexAIEmbedder)(ai, name, authClient, { projectId, location })
    );
  }));
}
var src_default = vertexAI;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  gemini10Pro,
  gemini15Flash,
  gemini15Pro,
  imagen2,
  imagen3,
  imagen3Fast,
  textEmbedding004,
  textEmbeddingGecko003,
  textEmbeddingGeckoMultilingual001,
  textMultilingualEmbedding002,
  vertexAI
});
//# sourceMappingURL=index.js.map